{"ast":null,"code":"var _jsxFileName = \"D:\\\\Business\\\\Programming\\\\react_lists\\\\src\\\\components\\\\TreeCrawl.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TreeCrawl = ({\n  mappedItems,\n  parent,\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: items.map(item => {\n      console.log('parent', item.parent);\n\n      if (item.parent === parent.id && !mappedItems.includes(item)) {\n        mappedItems.push(item);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TreeCrawl, {\n            mappedItems: mappedItems,\n            parent: item,\n            items: items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = TreeCrawl;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeCrawl\");","map":{"version":3,"sources":["D:/Business/Programming/react_lists/src/components/TreeCrawl.js"],"names":["React","TreeCrawl","mappedItems","parent","items","map","item","console","log","id","includes","push","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB,CAAD,KAAkC;AACvD,sBACI;AAAA,cACKA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAQ;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,IAAI,CAACH,MAA1B;;AACA,UAAKG,IAAI,CAACH,MAAL,KAAgBA,MAAM,CAACM,EAAvB,IAA6B,CAAEP,WAAW,CAACQ,QAAZ,CAAqBJ,IAArB,CAApC,EAAgE;AAC5DJ,QAAAA,WAAW,CAACS,IAAZ,CAAiBL,IAAjB;AACA,4BACI;AAAA,kCACI;AAAA,sBAAOA,IAAI,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAW,YAAA,WAAW,EAAEV,WAAxB;AAAqC,YAAA,MAAM,EAAEI,IAA7C;AAAmD,YAAA,KAAK,EAAEF;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAASE,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OAPD,MAOQ;AACJ,4BAAQ,qCAAR;AACH;AACJ,KAZA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlBM;KAAMR,S","sourcesContent":["import React from 'react'\r\n\r\nexport const TreeCrawl = ({mappedItems, parent, items}) => {\r\n    return (\r\n        <ul>\r\n            {items.map((item)=>{  \r\n                console.log('parent',item.parent)              \r\n                if ( item.parent === parent.id && ! mappedItems.includes(item)) {\r\n                    mappedItems.push(item)\r\n                    return (\r\n                        <li key={item.id}>\r\n                            <span>{item.title}</span>\r\n                            <TreeCrawl mappedItems={mappedItems} parent={item} items={items} />\r\n                        </li>)\r\n                } else  {\r\n                    return (<></>)\r\n                }\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}