{"ast":null,"code":"var _jsxFileName = \"D:\\\\Business\\\\Programming\\\\react_lists\\\\src\\\\ItemTree\\\\TreeCrawl.js\";\nimport { StylesContext } from '@material-ui/styles';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './TreeCrawl.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TreeCrawl = ({\n  items\n}) => {\n  const link = l => {\n    if (l === 1) {\n      return 'link1';\n    } else if (l > 1) {\n      return 'link2';\n    } else {\n      return 'link';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      marginLeft: '1rem'\n    },\n    children: Object.keys(items).map((key, index) => {\n      var item = items[key];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.listli,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: styles.listItems,\n          to: `/item/${key}`,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), item.children && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TreeCrawl, {\n            items: item.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)\n        }, void 0, false)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = TreeCrawl;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeCrawl\");","map":{"version":3,"sources":["D:/Business/Programming/react_lists/src/ItemTree/TreeCrawl.js"],"names":["StylesContext","React","Link","styles","TreeCrawl","items","link","l","marginLeft","Object","keys","map","key","index","item","listli","listItems","title","children"],"mappings":";AAAA,SAASA,aAAT,QAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAClC,QAAMC,IAAI,GAAIC,CAAD,IAAO;AAChB,QAAIA,CAAC,KAAK,CAAV,EAAa;AACT,aAAO,OAAP;AACH,KAFD,MAEO,IAAIA,CAAC,GAAG,CAAR,EAAY;AACf,aAAO,OAAP;AACH,KAFM,MAEA;AACH,aAAO,MAAP;AACH;AACJ,GARD;;AASA,sBACI;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAX;AAAA,cACKC,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,GAAnB,CAAuB,CAACC,GAAD,EAAMC,KAAN,KAAc;AAClC,UAAIC,IAAI,GAAGT,KAAK,CAACO,GAAD,CAAhB;AACA,0BACA;AAAI,QAAA,SAAS,EAAET,MAAM,CAACY,MAAtB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAEZ,MAAM,CAACa,SAAxB;AAAmC,UAAA,EAAE,EAAG,SAAQJ,GAAI,EAApD;AAAA,oBAAwDE,IAAI,CAACG;AAA7D;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKH,IAAI,CAACI,QAAL,iBAAiB;AAAA,iCAClB,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEJ,IAAI,CAACI;AAAvB;AAAA;AAAA;AAAA;AAAA;AADkB,yBAFtB;AAAA,SAAmCN,GAAnC;AAAA;AAAA;AAAA;AAAA,cADA;AAOH,KATA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxBM;KAAMR,S","sourcesContent":["import { StylesContext } from '@material-ui/styles';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './TreeCrawl.module.css';\r\n\r\nexport const TreeCrawl = ({items}) => {\r\n    const link = (l) => {\r\n        if (l === 1) {\r\n            return 'link1'\r\n        } else if (l > 1)  {\r\n            return 'link2'\r\n        } else {\r\n            return 'link'\r\n        }\r\n    }\r\n    return (\r\n        <ul style={{marginLeft:'1rem'}}>            \r\n            {Object.keys(items).map((key, index)=>{                \r\n                var item = items[key]\r\n                return (\r\n                <li className={styles.listli} key={key}>\r\n                    <Link className={styles.listItems} to={`/item/${key}`}>{item.title}</Link>\r\n                    {item.children && <>                    \r\n                    <TreeCrawl items={item.children} />\r\n                    </>}                    \r\n                </li>)             \r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}