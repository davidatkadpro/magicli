{"ast":null,"code":"var _jsxFileName = \"D:\\\\Business\\\\Programming\\\\react_lists\\\\src\\\\pages\\\\ListTree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { TreeCrawl } from '../ItemTree/TreeCrawl';\nimport { Link } from 'react-router-dom';\nimport styles from '../ItemTree/TreeCrawl.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListTree = () => {\n  _s();\n\n  const {\n    items\n  } = useContext(AppContext);\n\n  const build = () => {\n    const added = [];\n\n    const crawl = parent => {\n      const found = {};\n\n      for (var i in items) {\n        var item = items[i];\n\n        if (parent === item.parent && !added.includes(item.id)) {\n          added.push(item.id);\n          found[item.id] = {\n            title: item.title\n          };\n          var children = crawl(item.id);\n\n          if (Object.keys(children).length > 0) {\n            found[item.id].children = children;\n          }\n        }\n      }\n\n      return found;\n    };\n\n    return crawl(null);\n  };\n\n  const itemTree = build();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `card-panel ${styles.card}`,\n      children: Object.keys(itemTree).map((key, index) => {\n        var item = itemTree[key];\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.listli,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: styles.listItems,\n            to: `/item/${key}`,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), item.children && /*#__PURE__*/_jsxDEV(TreeCrawl, {\n            items: item.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTree, \"rJqdXWcK+J1DNZMA7+YqMqgizNU=\");\n\n_c = ListTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTree\");","map":{"version":3,"sources":["D:/Business/Programming/react_lists/src/pages/ListTree.js"],"names":["React","useContext","AppContext","TreeCrawl","Link","styles","ListTree","items","build","added","crawl","parent","found","i","item","includes","id","push","title","children","Object","keys","length","itemTree","card","map","key","index","listli","link","listItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,kCAAnB;;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACC,UAAD,CAA5B;;AAEA,QAAMM,KAAK,GAAG,MAAM;AAChB,UAAMC,KAAK,GAAG,EAAd;;AACA,UAAMC,KAAK,GAAIC,MAAD,IAAY;AACtB,YAAMC,KAAK,GAAG,EAAd;;AACA,WAAM,IAAIC,CAAV,IAAeN,KAAf,EAAsB;AAClB,YAAIO,IAAI,GAAGP,KAAK,CAACM,CAAD,CAAhB;;AACA,YAAIF,MAAM,KAAKG,IAAI,CAACH,MAAhB,IAA0B,CAAEF,KAAK,CAACM,QAAN,CAAeD,IAAI,CAACE,EAApB,CAAhC,EAAyD;AACrDP,UAAAA,KAAK,CAACQ,IAAN,CAAWH,IAAI,CAACE,EAAhB;AACAJ,UAAAA,KAAK,CAACE,IAAI,CAACE,EAAN,CAAL,GAAiB;AAACE,YAAAA,KAAK,EAACJ,IAAI,CAACI;AAAZ,WAAjB;AACA,cAAIC,QAAQ,GAAGT,KAAK,CAACI,IAAI,CAACE,EAAN,CAApB;;AACA,cAAII,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,GAA+B,CAAnC,EAAsC;AAACV,YAAAA,KAAK,CAACE,IAAI,CAACE,EAAN,CAAL,CAAeG,QAAf,GAA0BA,QAA1B;AAAmC;AAC7E;AACJ;;AACD,aAAOP,KAAP;AACH,KAZD;;AAaA,WAAOF,KAAK,CAAC,IAAD,CAAZ;AACH,GAhBD;;AAiBA,QAAMa,QAAQ,GAAGf,KAAK,EAAtB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAG,cAAaH,MAAM,CAACmB,IAAK,EAAzC;AAAA,gBACCJ,MAAM,CAACC,IAAP,CAAYE,QAAZ,EAAsBE,GAAtB,CAA0B,CAACC,GAAD,EAAMC,KAAN,KAAc;AACrC,YAAIb,IAAI,GAAGS,QAAQ,CAACG,GAAD,CAAnB;AACA,4BACA;AAAI,UAAA,SAAS,EAAErB,MAAM,CAACuB,MAAtB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAEvB,MAAM,CAACwB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAExB,MAAM,CAACyB,SAAxB;AAAmC,YAAA,EAAE,EAAG,SAAQJ,GAAI,EAApD;AAAA,sBAAwDZ,IAAI,CAACI;AAA7D;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKJ,IAAI,CAACK,QAAL,iBACD,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEL,IAAI,CAACK;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAAmCO,GAAnC;AAAA;AAAA;AAAA;AAAA,gBADA;AAQH,OAVA;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAxCM;;GAAMpB,Q;;KAAAA,Q","sourcesContent":["import React, {useContext} from 'react'\r\nimport { AppContext } from '../context/AppContext';\r\nimport { TreeCrawl } from '../ItemTree/TreeCrawl';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from '../ItemTree/TreeCrawl.module.css';\r\n\r\n\r\nexport const ListTree = () => {\r\n    const { items } = useContext(AppContext);\r\n    \r\n    const build = () => {\r\n        const added = []\r\n        const crawl = (parent) => {\r\n            const found = {}\r\n            for ( var i in items) {\r\n                var item = items[i];\r\n                if (parent === item.parent && ! added.includes(item.id)) {\r\n                    added.push(item.id);\r\n                    found[item.id] = {title:item.title}\r\n                    var children = crawl(item.id)\r\n                    if (Object.keys(children).length > 0) {found[item.id].children = children}                \r\n                } \r\n            }\r\n            return found\r\n        }\r\n        return crawl(null)\r\n    }\r\n    const itemTree = build()\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <ul className={`card-panel ${styles.card}`}>\r\n            {Object.keys(itemTree).map((key, index)=>{\r\n                var item = itemTree[key]\r\n                return (\r\n                <li className={styles.listli} key={key}>\r\n                    <div className={styles.link} />\r\n                    <Link className={styles.listItems} to={`/item/${key}`}>{item.title}</Link>\r\n                    {item.children &&\r\n                    <TreeCrawl items={item.children} />\r\n                    }                    \r\n                </li>)             \r\n            })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}