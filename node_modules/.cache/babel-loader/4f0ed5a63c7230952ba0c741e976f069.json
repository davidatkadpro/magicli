{"ast":null,"code":"var _jsxFileName = \"D:\\\\Business\\\\Programming\\\\react_lists\\\\src\\\\components\\\\ItemModes\\\\ItemTotal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport styles from './ItemMode.module.css';\nimport { AppContext } from '../../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ItemTotal = ({\n  item,\n  listItems,\n  title,\n  remove,\n  editable,\n  showTotal\n}) => {\n  _s();\n\n  const active = item.modules && item.modules.total ? true : false;\n  const {\n    dispatch\n  } = useContext(AppContext);\n\n  const handleChange = e => {\n    item.modules.total.value = Number(e.target.value);\n    updateItem();\n  };\n\n  const childTotals = () => {\n    const totals = listItems.reduce((count, i) => i.modules && i.modules.total.value > 0 ? count + i.modules.total.value : count, 0);\n    console.log(typeof totals, totals, listItems);\n    return totals.toFixed(2);\n  };\n\n  const updateItem = () => {\n    dispatch({\n      type: 'UPDATE_ITEM',\n      payload: item\n    });\n  };\n\n  const handleRemove = () => {\n    delete item.modules.total;\n    dispatch({\n      type: 'UPDATE_ITEM',\n      payload: item\n    });\n    showTotal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: active && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${editable ? styles.modeMain : ''} ${styles.modeContainer}`,\n      children: [title && /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.totalWrap,\n        children: [editable && /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.modeInput,\n          type: \"text\",\n          name: \"total\",\n          value: item.modules.total.value,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), listItems ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.listTotals,\n          children: childTotals()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.listTotals,\n          children: item.modules.total.value.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), remove && /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: handleRemove,\n        className: `material-icons ${styles.iconClose}`,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ItemTotal, \"y0TpHjmA0G5gpKtNPtwKueTIMNE=\");\n\n_c = ItemTotal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemTotal\");","map":{"version":3,"sources":["D:/Business/Programming/react_lists/src/components/ItemModes/ItemTotal.js"],"names":["React","useContext","styles","AppContext","ItemTotal","item","listItems","title","remove","editable","showTotal","active","modules","total","dispatch","handleChange","e","value","Number","target","updateItem","childTotals","totals","reduce","count","i","console","log","toFixed","type","payload","handleRemove","modeMain","modeContainer","totalWrap","modeInput","listTotals","iconClose"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\r\nimport styles from './ItemMode.module.css';\r\nimport { AppContext } from '../../context/AppContext';\r\n\r\nexport const ItemTotal = ({item, listItems, title, remove, editable, showTotal}) => {\r\n    const active = item.modules && item.modules.total ? true : false;\r\n\r\n    const { dispatch } = useContext(AppContext);\r\n\r\n    const handleChange = (e) => {\r\n        item.modules.total.value = Number(e.target.value);\r\n        updateItem() \r\n    }\r\n\r\n    const childTotals = () => {\r\n        const totals =  listItems.reduce((count, i) => ( ( i.modules && i.modules.total.value > 0) ? count + i.modules.total.value : count), 0 )\r\n        console.log(typeof totals, totals,listItems)\r\n        return totals.toFixed(2);\r\n    }\r\n\r\n    const updateItem = () => {\r\n        dispatch({\r\n            type:'UPDATE_ITEM',\r\n            payload: item\r\n        });\r\n    }\r\n    const handleRemove = () => {\r\n        delete item.modules.total\r\n        dispatch({\r\n            type:'UPDATE_ITEM',\r\n            payload: item\r\n        });\r\n        showTotal(false)\r\n    }\r\n    return (\r\n        <>\r\n            { active &&\r\n            <div className={`${editable ? styles.modeMain : ''} ${styles.modeContainer}`}>\r\n                {title && <h5>Total</h5>}\r\n                <span className={styles.totalWrap}>\r\n                    { editable &&\r\n                    <input className={styles.modeInput} type=\"text\" name=\"total\" value={item.modules.total.value} onChange={handleChange} />    \r\n                    }\r\n                    { listItems ? (\r\n                        <span className={styles.listTotals}>{childTotals()}</span>   \r\n                    ):(\r\n                        <span className={styles.listTotals}>{item.modules.total.value.toFixed(2)}</span>\r\n                    )}\r\n                                     \r\n                </span>\r\n                {remove && <i onClick={handleRemove} className={`material-icons ${styles.iconClose}`}>close</i>}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}