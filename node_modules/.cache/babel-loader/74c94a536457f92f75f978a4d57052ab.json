{"ast":null,"code":"var _jsxFileName = \"D:\\\\Business\\\\Programming\\\\react_lists\\\\src\\\\context\\\\AppContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst childCrawler = (id, items) => {\n  const found = [];\n  const children = [id];\n\n  const crawl = (id, items) => {\n    for (var i in items) {\n      if (items[i].id !== id && items[i].parent !== id && !children.includes(items[i].id) && !found.includes(items[i])) {\n        found.push(items[i]);\n      } else if (items[i].id !== id && items[i].parent === id) {\n        children.push(items[i].id);\n        crawl(items[i].id, items);\n      }\n    }\n  };\n\n  crawl(id, items);\n  return found;\n};\n\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      return { ...state,\n        items: [...state.items, action.payload]\n      };\n\n    case 'UPDATE_ITEM':\n      return { ...state,\n        items: state.items.map(item => item.id === action.payload.id ? action.payload : item)\n      };\n\n    case 'DELETE_ITEM':\n      // TODO crap futher down and delete all child items, also add a warning dialog\n      return { ...state,\n        items: [...state.items].filter(item => item.id !== action.payload.id && !getChildren(action.payload, state.items).includes(item))\n      };\n\n    case 'UPDATE_ITEMS':\n      return { ...state,\n        items: state.items.map(item => {\n          action.payload.forEach(newItem => {\n            if (newItem.id === item.id) {\n              return newItem;\n            }\n          });\n          return item;\n        })\n      };\n\n    case 'ADD_TAG':\n      return { ...state,\n        tags: [...state.tags, action.payload]\n      };\n\n    case 'DELETE_TAG':\n      return { ...state,\n        tags: [...state.tags].filter(tag => tag.id !== action.payload.id),\n        items: [...state.items, state.items.map(item => {\n          if (item.tags && item.tags.includes(action.payload)) {\n            item.tags = item.tags.filter(tag => tag !== action.payload.id);\n          }\n\n          return item;\n        })]\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AppReducer;\nconst KEY = 'list-app';\n\nconst getStore = () => {\n  return JSON.parse(localStorage.getItem(KEY));\n};\n\nconst setStore = data => {\n  localStorage.setItem(KEY, JSON.stringify(data));\n};\n\nconst getChildren = (item, items) => {\n  const found = [];\n\n  const crawl = (id, items) => {\n    for (var i in items) {\n      if (items[i].parent === id && !found.includes(items[i])) {\n        found.push(items[i]);\n        crawl(items[i].id, items);\n      }\n    }\n  };\n\n  crawl(item.id, items);\n  return found;\n};\n\nconst initialState = {\n  tags: [{\n    id: 1,\n    title: 'Personal'\n  }],\n  items: [{\n    id: 1,\n    title: 'Title',\n    description: '',\n    tags: [],\n    parent: null\n  }, {\n    id: 2,\n    title: 'Title 2',\n    description: '',\n    tags: [],\n    parent: null\n  }, {\n    id: 3,\n    title: 'Title 3',\n    description: '',\n    tags: [],\n    parent: 2\n  }]\n};\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, getStore() || initialState);\n  useEffect(() => {\n    setStore(state);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      items: state.items,\n      tags: state.tags,\n      children: item => getChildren(item, state.items),\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"Sf9Agq36jKCyA5ZDToSk+g5uyP8=\");\n\n_c2 = AppProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"sources":["D:/Business/Programming/react_lists/src/context/AppContext.js"],"names":["createContext","useReducer","useEffect","childCrawler","id","items","found","children","crawl","i","parent","includes","push","AppReducer","state","action","type","payload","map","item","filter","getChildren","forEach","newItem","tags","tag","KEY","getStore","JSON","parse","localStorage","getItem","setStore","data","setItem","stringify","initialState","title","description","AppContext","AppProvider","props","dispatch"],"mappings":"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","sourcesContent":["import { createContext, useReducer, useEffect } from \"react\";\r\n\r\nconst childCrawler = (id, items) => {\r\n    const found = []\r\n    const children = [id]\r\n    const crawl = (id, items) =>{\r\n        for(var i in items) {\r\n            if (items[i].id !== id && items[i].parent !== id && ! children.includes(items[i].id) && ! found.includes(items[i])) {\r\n                found.push(items[i]);\r\n            } else if (items[i].id !== id && items[i].parent === id) {\r\n                children.push(items[i].id)\r\n                crawl(items[i].id, items)\r\n            } \r\n        }\r\n    }\r\n    crawl(id, items)\r\n    return found\r\n}\r\n\r\nconst AppReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_ITEM':\r\n            return {\r\n                ...state, \r\n                items: [...state.items, action.payload],\r\n            }\r\n        case 'UPDATE_ITEM':\r\n            return {\r\n                ...state, \r\n                items: state.items.map(\r\n                    (item) => item.id === action.payload.id ? action.payload : item\r\n                )\r\n            }  \r\n        case 'DELETE_ITEM':\r\n            // TODO crap futher down and delete all child items, also add a warning dialog\r\n            return {\r\n                ...state, \r\n                items: [...state.items].filter(item => item.id !== action.payload.id && ! getChildren(action.payload, state.items).includes(item) )\r\n            } \r\n        case 'UPDATE_ITEMS':\r\n            return {\r\n                ...state, \r\n                items: state.items.map((item) => {\r\n                    action.payload.forEach(newItem => {\r\n                        if (newItem.id === item.id){\r\n                            return newItem;\r\n                        }\r\n                    })\r\n                    return item;\r\n                })\r\n            }  \r\n        case 'ADD_TAG':\r\n            return {\r\n                ...state, \r\n                tags: [...state.tags, action.payload],\r\n            }\r\n        case 'DELETE_TAG':\r\n            return {\r\n                ...state, \r\n                tags: [...state.tags].filter(tag => tag.id !== action.payload.id),\r\n                items: [...state.items, state.items.map( (item) => {\r\n                    if (item.tags && item.tags.includes(action.payload)) {\r\n                        item.tags = item.tags.filter(tag => tag !== action.payload.id) }\r\n                    return item\r\n                })] \r\n            }        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst KEY = 'list-app';\r\nconst getStore = () =>{\r\n    return  JSON.parse(localStorage.getItem(KEY));\r\n}\r\nconst setStore = (data) =>{\r\n    localStorage.setItem(KEY, JSON.stringify(data));\r\n}\r\n\r\nconst getChildren = (item, items) => {\r\n    const found = []\r\n    const crawl = (id, items) =>{\r\n        for(var i in items) {\r\n            if (items[i].parent === id && ! found.includes(items[i]) ) {\r\n                found.push(items[i]);\r\n                crawl(items[i].id, items)\r\n            } \r\n        }\r\n    }\r\n    crawl(item.id, items)\r\n    return found\r\n}\r\n\r\nconst initialState = {\r\n    tags: [\r\n        {id:1, title:'Personal'}\r\n    ],\r\n    items:[\r\n        {id:1, title:'Title', description:'', tags:[], parent:null},\r\n        {id:2, title:'Title 2', description:'', tags:[], parent:null},\r\n        {id:3, title:'Title 3', description:'', tags:[], parent:2},\r\n    ]\r\n}\r\n\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = (props) =>{\r\n    const [state, dispatch] = useReducer(AppReducer, getStore() || initialState);\r\n\r\n    useEffect(() => {\r\n        setStore(state)\r\n    }, [state])\r\n\r\n    return (\r\n    <AppContext.Provider \r\n        value={{\r\n            items: state.items,\r\n            tags: state.tags,\r\n            children: (item) => getChildren(item, state.items), \r\n            dispatch,\r\n        }}\r\n    >\r\n        {props.children}\r\n    </AppContext.Provider>)\r\n}"]},"metadata":{},"sourceType":"module"}