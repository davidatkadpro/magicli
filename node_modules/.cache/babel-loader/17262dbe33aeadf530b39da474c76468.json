{"ast":null,"code":"var _jsxFileName = \"D:\\\\Business\\\\Programming\\\\react_lists\\\\src\\\\components\\\\ItemModes\\\\ItemCount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport styles from './ItemMode.module.css';\nimport { AppContext } from '../../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ItemCount = ({\n  item,\n  title,\n  remove,\n  editable = false,\n  showCount\n}) => {\n  _s();\n\n  const active = item.modules && item.modules.count ? true : false;\n  const {\n    dispatch\n  } = useContext(AppContext);\n\n  const handleAdd = () => {\n    item.modules.count.value = item.modules.count.value + 1;\n    updateItem();\n  };\n\n  const handleMinus = () => {\n    item.modules.count.value = item.modules.count.value > 0 ? item.modules.count.value - 1 : 0;\n    updateItem();\n  };\n\n  const updateItem = () => {\n    dispatch({\n      type: 'UPDATE_ITEM',\n      payload: item\n    });\n  };\n\n  const handleRemove = () => {\n    delete item.modules.count;\n    dispatch({\n      type: 'UPDATE_ITEM',\n      payload: item\n    });\n    showCount(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: active && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.modeContainer}`,\n      children: [title && /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.modeWrap,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: handleMinus,\n          className: `material-icons ${styles.iconCount}`,\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.countValue,\n          children: item.modules.count.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: handleAdd,\n          className: `material-icons ${styles.iconCount}`,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), remove && /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: handleRemove,\n        className: `material-icons ${styles.iconClose}`,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ItemCount, \"y0TpHjmA0G5gpKtNPtwKueTIMNE=\");\n\n_c = ItemCount;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemCount\");","map":{"version":3,"sources":["D:/Business/Programming/react_lists/src/components/ItemModes/ItemCount.js"],"names":["React","useContext","styles","AppContext","ItemCount","item","title","remove","editable","showCount","active","modules","count","dispatch","handleAdd","value","updateItem","handleMinus","type","payload","handleRemove","modeContainer","modeWrap","iconCount","countValue","iconClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA,QAAQ,GAAC,KAA/B;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AAAA;;AAC3E,QAAMC,MAAM,GAAGL,IAAI,CAACM,OAAL,IAAgBN,IAAI,CAACM,OAAL,CAAaC,KAA7B,GAAqC,IAArC,GAA4C,KAA3D;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeZ,UAAU,CAACE,UAAD,CAA/B;;AAEA,QAAMW,SAAS,GAAG,MAAM;AACpBT,IAAAA,IAAI,CAACM,OAAL,CAAaC,KAAb,CAAmBG,KAAnB,GAA2BV,IAAI,CAACM,OAAL,CAAaC,KAAb,CAAmBG,KAAnB,GAA2B,CAAtD;AACAC,IAAAA,UAAU;AACb,GAHD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBZ,IAAAA,IAAI,CAACM,OAAL,CAAaC,KAAb,CAAmBG,KAAnB,GAA2BV,IAAI,CAACM,OAAL,CAAaC,KAAb,CAAmBG,KAAnB,GAA2B,CAA3B,GAA+BV,IAAI,CAACM,OAAL,CAAaC,KAAb,CAAmBG,KAAnB,GAA2B,CAA1D,GAA8D,CAAzF;AACAC,IAAAA,UAAU;AACb,GAHD;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAC,aADA;AAELC,MAAAA,OAAO,EAAEd;AAFJ,KAAD,CAAR;AAIH,GALD;;AAMA,QAAMe,YAAY,GAAG,MAAM;AACvB,WAAOf,IAAI,CAACM,OAAL,CAAaC,KAApB;AACAC,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAC,aADA;AAELC,MAAAA,OAAO,EAAEd;AAFJ,KAAD,CAAR;AAIAI,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAPD;;AAQA,sBACI;AAAA,cACMC,MAAM,iBACR;AAAK,MAAA,SAAS,EAAG,GAAER,MAAM,CAACmB,aAAc,EAAxC;AAAA,iBACKf,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,eAEI;AAAM,QAAA,SAAS,EAAEJ,MAAM,CAACoB,QAAxB;AAAA,gCACI;AAAG,UAAA,OAAO,EAAEL,WAAZ;AAAyB,UAAA,SAAS,EAAG,kBAAiBf,MAAM,CAACqB,SAAU,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAErB,MAAM,CAACsB,UAAxB;AAAA,oBAAqCnB,IAAI,CAACM,OAAL,CAAaC,KAAb,CAAmBG;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,OAAO,EAAED,SAAZ;AAAuB,UAAA,SAAS,EAAG,kBAAiBZ,MAAM,CAACqB,SAAU,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOKhB,MAAM,iBAAI;AAAG,QAAA,OAAO,EAAEa,YAAZ;AAA0B,QAAA,SAAS,EAAG,kBAAiBlB,MAAM,CAACuB,SAAU,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAcH,CAzCM;;GAAMrB,S;;KAAAA,S","sourcesContent":["import React, {useContext} from 'react';\r\nimport styles from './ItemMode.module.css';\r\nimport { AppContext } from '../../context/AppContext';\r\n\r\nexport const ItemCount = ({item, title, remove, editable=false, showCount}) => {\r\n    const active = item.modules && item.modules.count ? true : false;\r\n\r\n    const { dispatch } = useContext(AppContext);\r\n\r\n    const handleAdd = () => {\r\n        item.modules.count.value = item.modules.count.value + 1\r\n        updateItem()\r\n    }\r\n    const handleMinus = () => {\r\n        item.modules.count.value = item.modules.count.value > 0 ? item.modules.count.value - 1 : 0;\r\n        updateItem() \r\n    }\r\n    const updateItem = () => {\r\n        dispatch({\r\n            type:'UPDATE_ITEM',\r\n            payload: item\r\n        });\r\n    }\r\n    const handleRemove = () => {\r\n        delete item.modules.count\r\n        dispatch({\r\n            type:'UPDATE_ITEM',\r\n            payload: item\r\n        });\r\n        showCount(false)\r\n    }\r\n    return (\r\n        <>\r\n            { active &&\r\n            <div className={`${styles.modeContainer}`}>\r\n                {title && <h5>Count</h5>}\r\n                <span className={styles.modeWrap}>\r\n                    <i onClick={handleMinus} className={`material-icons ${styles.iconCount}`}>remove</i>\r\n                    <span className={styles.countValue}>{item.modules.count.value}</span>\r\n                    <i onClick={handleAdd} className={`material-icons ${styles.iconCount}`}>add</i>\r\n                </span>\r\n                {remove && <i onClick={handleRemove} className={`material-icons ${styles.iconClose}`}>close</i>}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}