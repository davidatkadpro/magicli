{"ast":null,"code":"var _jsxFileName = \"D:\\\\Business\\\\Programming\\\\react_lists\\\\src\\\\pages\\\\ListTree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { TreeCrawl } from '../ItemTree/TreeCrawl';\nimport { Link, useHistory } from 'react-router-dom';\nimport styles from '../ItemTree/TreeCrawl.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListTree() {\n  _s();\n\n  const {\n    items\n  } = useContext(AppContext);\n  let history = useHistory();\n\n  const build = () => {\n    const added = [];\n\n    const crawl = parent => {\n      const found = {};\n\n      for (var i in items) {\n        var item = items[i];\n\n        if (parent === item.parent && !added.includes(item.id)) {\n          added.push(item.id);\n          found[item.id] = {\n            title: item.title\n          };\n          var children = crawl(item.id);\n\n          if (Object.keys(children).length > 0) {\n            found[item.id].children = children;\n          }\n        }\n      }\n\n      return found;\n    };\n\n    return crawl(null);\n  };\n\n  const itemTree = build();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `card-panel ${styles.card}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn secondary right  ${styles.button}`,\n          onClick: () => history.goBack(),\n          children: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), Object.keys(itemTree).map(key => {\n          var item = itemTree[key];\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.listli,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: styles.listItems,\n              to: \"/\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this), item.children && /*#__PURE__*/_jsxDEV(TreeCrawl, {\n              items: item.children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ListTree, \"czl+hCzSF7rrt7hFUtDL/6HGbKs=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTree\");","map":{"version":3,"sources":["D:/Business/Programming/react_lists/src/pages/ListTree.js"],"names":["React","useContext","AppContext","TreeCrawl","Link","useHistory","styles","ListTree","items","history","build","added","crawl","parent","found","i","item","includes","id","push","title","children","Object","keys","length","itemTree","card","button","goBack","map","key","listli","listItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AAEA,OAAOC,MAAP,MAAmB,kCAAnB;;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAYP,UAAU,CAACC,UAAD,CAA5B;AAEA,MAAIO,OAAO,GAAGJ,UAAU,EAAxB;;AAEA,QAAMK,KAAK,GAAG,MAAM;AAChB,UAAMC,KAAK,GAAG,EAAd;;AACA,UAAMC,KAAK,GAAIC,MAAD,IAAY;AACtB,YAAMC,KAAK,GAAG,EAAd;;AACA,WAAM,IAAIC,CAAV,IAAeP,KAAf,EAAsB;AAClB,YAAIQ,IAAI,GAAGR,KAAK,CAACO,CAAD,CAAhB;;AACA,YAAIF,MAAM,KAAKG,IAAI,CAACH,MAAhB,IAA0B,CAAEF,KAAK,CAACM,QAAN,CAAeD,IAAI,CAACE,EAApB,CAAhC,EAAyD;AACrDP,UAAAA,KAAK,CAACQ,IAAN,CAAWH,IAAI,CAACE,EAAhB;AACAJ,UAAAA,KAAK,CAACE,IAAI,CAACE,EAAN,CAAL,GAAiB;AAACE,YAAAA,KAAK,EAACJ,IAAI,CAACI;AAAZ,WAAjB;AACA,cAAIC,QAAQ,GAAGT,KAAK,CAACI,IAAI,CAACE,EAAN,CAApB;;AACA,cAAII,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,GAA+B,CAAnC,EAAsC;AAACV,YAAAA,KAAK,CAACE,IAAI,CAACE,EAAN,CAAL,CAAeG,QAAf,GAA0BA,QAA1B;AAAmC;AAC7E;AACJ;;AACD,aAAOP,KAAP;AACH,KAZD;;AAaA,WAAOF,KAAK,CAAC,IAAD,CAAZ;AACH,GAhBD;;AAiBA,QAAMa,QAAQ,GAAGf,KAAK,EAAtB;AAGA,sBACA;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAEI;AAAI,QAAA,SAAS,EAAG,cAAaJ,MAAM,CAACoB,IAAK,EAAzC;AAAA,gCACA;AAAQ,UAAA,SAAS,EAAG,wBAAuBpB,MAAM,CAACqB,MAAO,EAAzD;AAA4D,UAAA,OAAO,EAAE,MAAMlB,OAAO,CAACmB,MAAR,EAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAECN,MAAM,CAACC,IAAP,CAAYE,QAAZ,EAAsBI,GAAtB,CAA2BC,GAAD,IAAO;AAC9B,cAAId,IAAI,GAAGS,QAAQ,CAACK,GAAD,CAAnB;AACA,8BACA;AAAI,YAAA,SAAS,EAAExB,MAAM,CAACyB,MAAtB;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAEzB,MAAM,CAAC0B,SAAxB;AAAmC,cAAA,EAAE,EAAC,GAAtC;AAAA,wBAA2ChB,IAAI,CAACI;AAAhD;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKJ,IAAI,CAACK,QAAL,iBACD,QAAC,SAAD;AAAW,cAAA,KAAK,EAAEL,IAAI,CAACK;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAAmCS,GAAnC;AAAA;AAAA;AAAA;AAAA,kBADA;AAOH,SATA,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADA;AAmBH;;GA5CuBvB,Q;UAGNF,U;;;KAHME,Q","sourcesContent":["import React, {useContext} from 'react'\r\nimport { AppContext } from '../context/AppContext';\r\nimport { TreeCrawl } from '../ItemTree/TreeCrawl';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport styles from '../ItemTree/TreeCrawl.module.css';\r\n\r\n\r\nexport default function ListTree() {\r\n    const { items } = useContext(AppContext);\r\n\r\n    let history = useHistory();\r\n\r\n    const build = () => {\r\n        const added = []\r\n        const crawl = (parent) => {\r\n            const found = {}\r\n            for ( var i in items) {\r\n                var item = items[i];\r\n                if (parent === item.parent && ! added.includes(item.id)) {\r\n                    added.push(item.id);\r\n                    found[item.id] = {title:item.title}\r\n                    var children = crawl(item.id)\r\n                    if (Object.keys(children).length > 0) {found[item.id].children = children}                \r\n                } \r\n            }\r\n            return found\r\n        }\r\n        return crawl(null)\r\n    }\r\n    const itemTree = build()\r\n\r\n\r\n    return (\r\n    <>\r\n        <div className=\"container\">\r\n            \r\n            <ul className={`card-panel ${styles.card}`}>\r\n            <button className={`btn secondary right  ${styles.button}`} onClick={() => history.goBack()}>back</button>\r\n            {Object.keys(itemTree).map((key)=>{\r\n                var item = itemTree[key]\r\n                return (\r\n                <li className={styles.listli} key={key}>                    \r\n                    <Link className={styles.listItems} to=\"/\">{item.title}</Link>\r\n                    {item.children &&\r\n                    <TreeCrawl items={item.children} />\r\n                    }                    \r\n                </li>)             \r\n            })}\r\n            </ul>\r\n        </div></>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}