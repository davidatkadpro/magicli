{"ast":null,"code":"var _jsxFileName = \"D:\\\\Business\\\\Programming\\\\react_lists\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Typography, TextField, Grid, Checkbox, Box, FormControl, List, ListItem, ListItemText, ListItemButton, ListItemIcon, IconButton } from '@mui/material';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      align: \"center\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-size-small\",\n              label: \"Title\",\n              variant: \"outlined\",\n              size: \"small\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-multiline-flexible\",\n              label: \"Description\",\n              multiline: true,\n              fullWidth: true,\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              width: '100%',\n              bgcolor: 'background.paper'\n            },\n            children: [0, 1, 2, 3].map(value => {\n              const labelId = `checkbox-list-label-${value}`;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                  role: undefined,\n                  onClick: handleToggle(value),\n                  dense: true,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      edge: \"start\",\n                      checked: checked.indexOf(value) !== -1,\n                      tabIndex: -1,\n                      disableRipple: true,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    id: labelId,\n                    variant: \"standard\",\n                    size: \"small\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, this)\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"ToIMgv3BZ7kw23hJeJICam9UGKg=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/Business/Programming/react_lists/src/pages/Dashboard.js"],"names":["React","Typography","TextField","Grid","Checkbox","Box","FormControl","List","ListItem","ListItemText","ListItemButton","ListItemIcon","IconButton","CommentIcon","Dashboard","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","width","bgcolor","map","labelId","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Typography, TextField, Grid, Checkbox, Box, FormControl, List, ListItem, ListItemText, ListItemButton, ListItemIcon, IconButton } from '@mui/material';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\n\r\nexport default function Dashboard() {\r\n    const [checked, setChecked] = React.useState([0]);\r\n\r\n    const handleToggle = (value) => () => {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n  \r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n  \r\n      setChecked(newChecked);\r\n    };\r\n    return (\r\n        <>\r\n            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                Dashboard\r\n            </Typography>\r\n            <Box sx={{ width: '100%' }}>\r\n                <FormControl fullWidth >\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField id=\"outlined-size-small\" label=\"Title\" variant=\"outlined\" size=\"small\" fullWidth  />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"outlined-multiline-flexible\"\r\n                                label=\"Description\"\r\n                                multiline\r\n                                fullWidth \r\n                                rows={4}\r\n                            />\r\n                        </Grid>\r\n                        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                        {[0, 1, 2, 3].map((value) => {\r\n                            const labelId = `checkbox-list-label-${value}`;\r\n\r\n                            return (\r\n                            <ListItem\r\n                                key={value}\r\n                                disablePadding                                \r\n                            >\r\n                                <ListItemButton role={undefined} onClick={handleToggle(value)} dense>\r\n                                <ListItemIcon>\r\n                                    <Checkbox\r\n                                    edge=\"start\"\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                    />\r\n                                </ListItemIcon>\r\n                                <TextField id={labelId} variant=\"standard\" size=\"small\" fullWidth />           \r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            );\r\n                        })}\r\n                        </List>\r\n                    </Grid>                    \r\n                </FormControl>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}